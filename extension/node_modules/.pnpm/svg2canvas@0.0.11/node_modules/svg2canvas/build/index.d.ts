export declare type Color = {
    r: number;
    g: number;
    b: number;
};
export declare function parseColor(col: string): Color;
export declare function ColorToHex(col: Color): string;
export declare function blend({ r: r1, g: g1, b: b1 }: Color, { r: r2, g: g2, b: b2 }: Color, a: number): Color;
declare type Style = {
    fillStyle?: string;
    strokeStyle?: string;
    globalAlpha?: string;
    lineCap?: string;
    lineDashOffset?: string;
    lineJoin?: string;
    lineWidth?: string;
    miterLimit?: string;
};
export declare class Drawing {
    private children;
    private style?;
    private path?;
    private fillColor?;
    private strokeColor?;
    constructor(style?: Style, path?: Path2D);
    private applyStyles;
    addChild(child: Drawing): void;
    draw(ctx: CanvasRenderingContext2D, tint?: Color, tintAmount?: number): void;
}
export declare class SVGDrawing {
    private children;
    readonly width: number;
    readonly height: number;
    private invWidth;
    private invHeight;
    constructor(width: number, height: number);
    addChild(child: Drawing): void;
    draw(ctx: CanvasRenderingContext2D, x?: number, y?: number, width?: number, height?: number, tint?: Color, tintAmount?: number): void;
}
export declare function CreateDrawingFromSVG(svg?: XMLDocument, globalStyle?: Style): SVGDrawing | undefined;
export {};
